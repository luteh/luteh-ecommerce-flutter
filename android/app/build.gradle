plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.flutter_starter_boilerplate"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flutter_starter_boilerplate"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }


    buildTypes {
        release {
            signingConfig signingConfigs.debug

            minifyEnabled true 
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.all {
                    def appName = "myapp"
                    def newName= "${appName}-${variant.getFlavorName()}-release-v${flutter.versionName}.apk"
                    outputFileName = newName
                }
            }
        }

        profile {
            minifyEnabled true 
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            
            applicationVariants.all { variant ->
                variant.outputs.all {
                    def appName = "myapp"
                    def newName= "${appName}-${variant.getFlavorName()}-profile-v${flutter.versionName}.apk"
                    outputFileName = newName
                }
            }
        }
    }

    flavorDimensions "env"

    productFlavors {
        dev {
            dimension "env"
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "My App Dev"
        }
        stg {
            dimension "env"
            applicationIdSuffix ".stg"
            resValue "string", "app_name", "My App Stg"
        }
        prod {
            dimension "env"
            resValue "string", "app_name", "My App"
        }
    }

}

flutter {
    source '../..'
}
