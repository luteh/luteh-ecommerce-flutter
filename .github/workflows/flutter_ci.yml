name: Staging APK build

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      flutter_cache: ${{ steps.flutter_cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17.x'
          cache: 'gradle'

      - name: Setup Flutter
        id: flutter_cache
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.2'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get
  
      - name: Start build runner build
        run: flutter pub run build_runner build

  analyze:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Start Dart code analysis
        run: flutter analyze .

  unit_test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run unit tests and collect coverage
        run: flutter test --coverage

      - name: Generate HTML Coverage Report
        run: |
          sudo apt-get install lcov
          genhtml coverage/lcov.info -o coverage/html

  build:
    runs-on: ubuntu-latest
    needs: [analyze, unit_test]
    steps:
      - name: Start staging APK build
        run: flutter build apk --release --flavor stg --obfuscate --split-debug-info=debug_files lib/main_stg.dart

      - name: Upload staging APK
        uses: actions/upload-artifact@v3
        with:
          name: staging-apk-release
          path: build/app/outputs/flutter-apk/app-stg-release.apk